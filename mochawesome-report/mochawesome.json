{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-05T04:01:39.544Z",
    "end": "2024-10-05T04:01:40.518Z",
    "duration": 974,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "699b9c42-3ed4-4127-bb40-7ea867390bcf",
      "title": "",
      "fullFile": "cypress\\e2e\\cypress\\API_Test\\API_reqress.cy.js",
      "file": "cypress\\e2e\\cypress\\API_Test\\API_reqress.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "efa92762-464f-4ed8-ab5c-fa89b757b77d",
          "title": "API testing reqres.in method PUT",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should update an existing user",
              "fullTitle": "API testing reqres.in method PUT Should update an existing user",
              "timedOut": null,
              "duration": 888,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: 'https://reqres.in/api/users/2',\n  // URL endpoint untuk update user di page 2\n  body: {\n    email: 'John.Brooks@reqress.in',\n    first_name: 'John',\n    last_name: 'Brooks'\n  }\n}).then(response => {\n  // Memastikan status code 200 OK\n  expect(response.status).to.eq(200);\n  // Memastikan respons body berisi data yang diperbarui\n  expect(response.body).to.have.property('email', 'John.Brooks@reqress.in');\n  expect(response.body).to.have.property('first_name', 'John');\n  expect(response.body).to.have.property('last_name', 'Brooks');\n  // Tampilkan hasil di Cypress log\n  cy.log('Updated User:', JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "5a3aa0e6-5367-42cc-aa13-af091fdd5c05",
              "parentUUID": "efa92762-464f-4ed8-ab5c-fa89b757b77d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a3aa0e6-5367-42cc-aa13-af091fdd5c05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 888,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}